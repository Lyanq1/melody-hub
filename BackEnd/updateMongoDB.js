import { MongoClient, ObjectId } from 'mongodb'

const uri =
  'mongodb+srv://anhquan2004162:melodyhub123@melody-hub.vsg0hab.mongodb.net/Melody-Hub?retryWrites=true&w=majority&appName=Melody-Hub'

const client = new MongoClient(uri)
const dbName = 'Melody-Hub'

// D·ªØ li·ªáu ph√¢n lo·∫°i theo t·ª´ kh√≥a
const categoryRules = [
  {
    _id: '687a5c8eaea60fd849fc0847',
    name: 'CD / DVD',
    keywords: ['ƒëƒ©a cd', 'cd', 'ƒëƒ©a dvd', 'dvd']
  },
  {
    _id: '687a5c8eaea60fd849fc0848',
    name: 'ƒêƒ©a Than / Vinyl',
    keywords: ['ƒëƒ©a than']
  },
  {
    _id: '687a5c8eaea60fd849fc0849',
    name: 'BƒÉng Cassette',
    keywords: ['bƒÉng cassette']
  },
  {
    _id: '687a5c8eaea60fd849fc084a',
    name: 'Merch',
    keywords: [
      'merch',
      '√°o thun',
      'magazine',
      'lanyard',
      'multicolor',
      'book',
      's√°ch',
      't√∫i',
      'v√≤ng tay',
      's·ªï tay',
      '√°p ph√≠ch',
      'huy hi·ªáu',
      'ƒëƒ©a usb',
      'th·∫ª nh·ªõ'
    ]
  },
  {
    _id: '687a5c8eaea60fd849fc084b',
    name: '·∫§n b·∫£n c√≥ ch·ªØ k√Ω',
    keywords: ['ch·ªØ k√Ω']
  },
  {
    _id: '687a5c8eaea60fd849fc0844', // fallback: T·∫•t c·∫£
    name: 'T·∫•t c·∫£',
    keywords: []
  }
]

async function updateCategoryIds() {
  try {
    await client.connect()
    const db = client.db(dbName)

    const discs = db.collection('disc')
    const allDiscs = await discs.find().toArray()

    for (const product of allDiscs) {
      const name = product.name?.toLowerCase() || ''
      let matchedRule = null

      // So kh·ªõp theo t·ª´ng danh m·ª•c
      for (const rule of categoryRules) {
        if (rule.keywords.some((kw) => name.includes(kw.toLowerCase()))) {
          matchedRule = rule
          break
        }
      }

      // N·∫øu kh√¥ng tr√πng t·ª´ kh√≥a n√†o, g√°n v√†o "T·∫•t c·∫£"
      if (!matchedRule) {
        matchedRule = categoryRules.find((r) => r.name === 'T·∫•t c·∫£')
      }

      if (matchedRule) {
        await discs.updateOne({ _id: product._id }, { $set: { categoryId: new ObjectId(matchedRule._id) } })
        console.log(`‚úÖ ${product.name} ‚Üí ${matchedRule.name}`)
      } else {
        console.log(`‚ùå Kh√¥ng t√¨m th·∫•y category cho ${product.name}`)
      }
    }

    console.log('üéâ ƒê√£ ho√†n t·∫•t c·∫≠p nh·∫≠t categoryId cho to√†n b·ªô s·∫£n ph·∫©m!')
  } catch (err) {
    console.error('‚ùå L·ªói:', err)
  } finally {
    await client.close()
  }
}

updateCategoryIds()
