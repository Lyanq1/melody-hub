import { MongoClient, ObjectId } from 'mongodb'

const uri =
  'mongodb+srv://anhquan2004162:melodyhub123@melody-hub.vsg0hab.mongodb.net/Melody-Hub?retryWrites=true&w=majority&appName=Melody-Hub'

const client = new MongoClient(uri)
const dbName = 'Melody-Hub'

const vietnameseRegex = /[ƒÉ√¢√™√¥∆°∆∞ƒë√°√†·∫£√£·∫°·∫•·∫ß·∫©·∫´·∫≠·∫Ø·∫±·∫≥·∫µ·∫∑√©√®·∫ª·∫Ω·∫π·∫ø·ªÅ·ªÉ·ªÖ·ªá√≠√¨·ªâƒ©·ªã√≥√≤·ªè√µ·ªç·ªë·ªì·ªï·ªó·ªô·ªõ·ªù·ªü·ª°·ª£√∫√π·ªß≈©·ª•·ª©·ª´·ª≠·ªØ·ª±√Ω·ª≥·ª∑·ªπ·ªµ]/i

// T·ª´ kh√≥a ƒë·ªÉ nh·∫≠n di·ªán lo·∫°i s·∫£n ph·∫©m
const categoryMap = [
  { keyword: 'vinyl', name: 'ƒêƒ©a Than / Vinyl' },
  { keyword: 'ƒëƒ©a than', name: 'ƒêƒ©a Than / Vinyl' },
  { keyword: 'cd', name: 'CD / DVD' },
  { keyword: 'dvd', name: 'CD / DVD' },
  { keyword: 'cassette', name: 'BƒÉng Cassette' },
  { keyword: 'merch', name: 'Merch' },
  { keyword: 'poster', name: 'Merch' },
  { keyword: '√°o', name: 'Merch' },
  { keyword: 'signed', name: '·∫§n b·∫£n c√≥ ch·ªØ k√Ω' },
  { keyword: 'ch·ªØ k√Ω', name: '·∫§n b·∫£n c√≥ ch·ªØ k√Ω' }
]

async function updateCategoryIds() {
  try {
    await client.connect()
    const db = client.db(dbName)

    const discs = db.collection('disc')
    const categories = db.collection('categories')

    const allCategories = await categories.find().toArray()
    const allDiscs = await discs.find().toArray()

    for (const product of allDiscs) {
      const name = product.name?.toLowerCase() || ''
      let matchedCategoryName = null

      // ∆Øu ti√™n ph√¢n lo·∫°i lo·∫°i h√¨nh s·∫£n ph·∫©m tr∆∞·ªõc (CD/DVD, Vinyl...)
      for (const { keyword, name: categoryName } of categoryMap) {
        if (name.includes(keyword)) {
          matchedCategoryName = categoryName
          break
        }
      }

      // N·∫øu kh√¥ng t√¨m th·∫•y lo·∫°i, ph√¢n lo·∫°i theo qu·ªëc gia
      if (!matchedCategoryName) {
        matchedCategoryName = vietnameseRegex.test(name) ? 'Nh·∫°c Vi·ªát' : 'Nh·∫°c N∆∞·ªõc Ngo√†i'
      }

      const matchedCategory = allCategories.find((c) => c.name === matchedCategoryName)

      if (matchedCategory) {
        await discs.updateOne({ _id: product._id }, { $set: { categoryId: matchedCategory._id.toString() } })
        console.log(`‚úÖ ${product.name} ‚Üí ${matchedCategoryName}`)
      } else {
        console.log(`‚ùå Kh√¥ng t√¨m th·∫•y category "${matchedCategoryName}"`)
      }
    }

    console.log('üéâ ƒê√£ ho√†n t·∫•t c·∫≠p nh·∫≠t categoryId cho to√†n b·ªô disc!')
  } catch (err) {
    console.error('‚ùå L·ªói:', err)
  } finally {
    await client.close()
  }
}

updateCategoryIds()
